{"version":3,"sources":["webpack:///./src/styles/document.module.css","webpack:///./src/components/document.js","webpack:///./node_modules/lodash-addons/dist/lodash-addons.js"],"names":["module","exports","_","require","Document","title","authors","hideMeta","datePublished","dateModified","dateFromNow","dateModifiedFromNow","image","author","timeToRead","toc","tableOfContents","tags","html","className","style","document","heading","meta","map","to","slugify","id","key","name","display","href","url","dateTime","readTime","tag","fluid","childImageSharp","cover","backgroundColor","tocWrap","tocTitle","dangerouslySetInnerHTML","__html","content","filterKeys","collection","iteratee","transform","results","val","push","baseGetType","validator","baseDefault","value","replacement","getNumber","isNumber","toBool","Boolean","slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","sliceIterator","TypeError","objectWith","args","reverse","arguments","_$take","take","_$take2","path","object","nth","set","parseQueryString","string","toString","split","result","segment","decodeURIComponent","parseDate","Date","mixin","check","valid","_len","validators","_key","each","differenceKeys","first","second","generateKey","possible","possibleLength","text","times","charAt","random","getArray","getBoolean","isBoolean","getFinite","isFinite","getFunction","isFunction","noop","getMap","isMap","Map","getObject","isObject","getPlainObject","isPlainObject","getPrototype","prototype","isUndefined","isNull","getPrototypeOf","constructor","getSet","isSet","Set","getString","isString","getWeakMap","isWeakMap","WeakMap","getWeakSet","isWeakSet","WeakSet","hasInOfType","hasIn","get","hasOfType","has","isIterable","isNonEmptyString","trim","sign","NaN","deburr","toLowerCase","replace","toDate","toQueryString","encodeURIComponent","join","transformValueMap","transformer","element","fromQueryString","with","factory"],"mappings":"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","file":"31e4e9aa3cd4f411f707604596f048ff560b42cd-c253fdd11d90b4031340.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"document\":\"document-module--document--1Lycb\",\"title\":\"document-module--title--1PjmY\",\"heading\":\"document-module--heading--Y8-yS\",\"meta\":\"document-module--meta--3MKTa\",\"readTime\":\"document-module--readTime--1MnG7\",\"tags\":\"document-module--tags--v5jW9\",\"tag\":\"document-module--tag--1yvzk\",\"authors\":\"document-module--authors--3mYFp\",\"author\":\"document-module--author--3S58z\",\"tocWrap\":\"document-module--tocWrap--_5cZQ\",\"tocTitle\":\"document-module--tocTitle--2ybLY\",\"toc\":\"document-module--toc--2M3e3\",\"cover\":\"document-module--cover--2yqPV\",\"grain\":\"document-module--grain--27TJO\",\"content\":\"document-module--content--JBd-i\",\"imageGrid\":\"document-module--imageGrid--1pjv7\",\"gridItem\":\"document-module--gridItem--2inPu\",\"loadMore\":\"document-module--loadMore--1m8aw\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport style from '../styles/document.module.css'\n\nconst _ = require('lodash-addons')\n\nconst Document = ({\n  title,\n  authors,\n  hideMeta,\n  datePublished,\n  dateModified,\n  dateFromNow,\n  dateModifiedFromNow,\n  image,\n  author,\n  timeToRead,\n  toc,\n  tableOfContents,\n  tags,\n  html,\n}) => {\n  return (\n    <article className={`${style.document} h-entry`}>\n      <div className={style.title}>\n        <h1 className={`${style.heading} p-name`}>{title}</h1>\n        <div className={style.meta}>\n          {authors ? (\n            <div className={style.authors}>\n              {authors.map(author => (\n                <Link\n                  className={style.author}\n                  to={`/author/${_.slugify(author.id)}/`}\n                  key={_.slugify(author.id)}\n                >\n                  <span>{author.name}</span>\n                </Link>\n              ))}\n            </div>\n          ) : null}\n          <div style={{ display: hideMeta && `none` }}>\n            <span>\n              {author && (\n                <>\n                  {dateModified ? `Updated` : `Published`}{' '}\n                  <span style={{ display: 'none' }}>\n                    by{' '}\n                    <a className=\"p-author h-card\" href={author.url}>\n                      {author.name}\n                    </a>\n                  </span>\n                </>\n              )}\n              {datePublished && (\n                <span style={{ display: dateModified && `none` }}>\n                  {' '}\n                  <time className=\"dt-published\" dateTime={datePublished}>\n                    {dateFromNow}\n                  </time>\n                </span>\n              )}\n              {dateModified && (\n                <>\n                  {' '}\n                  <time className=\"dt-updated\" dateTime={dateModified}>\n                    {dateModifiedFromNow}\n                  </time>\n                </>\n              )}\n            </span>\n            {timeToRead && (\n              <>\n                {' '}\n                <span className={style.readTime}>\n                  {timeToRead}&nbsp;min&nbsp;read\n                </span>\n              </>\n            )}\n          </div>\n          {tags ? (\n            <div className={style.tags}>\n              {tags.map((tag) => (\n                <Link\n                  className={style.tag}\n                  to={`/tag/${_.slugify(tag)}/`}\n                  key={_.slugify(tag)}\n                >\n                  <span>#{tag}</span>\n                </Link>\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n\n      {image && (\n        <Img\n          fluid={image.childImageSharp.fluid}\n          className={style.cover}\n          backgroundColor=\"var(--input-background-color)\"\n        />\n      )}\n\n      {toc && (\n        <details className={style.tocWrap}>\n          <summary className={style.tocTitle}>Table of contents</summary>\n          <div\n            className={style.toc}\n            dangerouslySetInnerHTML={{ __html: tableOfContents }}\n          />\n        </details>\n      )}\n\n      <div\n        className={`${style.content} e-content`}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </article>\n  )\n}\n\nDocument.propTypes = {\n  title: PropTypes.string,\n  authors: PropTypes.array,\n  hideMeta: PropTypes.bool,\n  datePublished: PropTypes.string,\n  dateFromNow: PropTypes.string,\n  dateModified: PropTypes.string,\n  dateModifiedFromNow: PropTypes.string,\n  image: PropTypes.object,\n  author: PropTypes.object,\n  timeToRead: PropTypes.number,\n  toc: PropTypes.bool,\n  tableOfContents: PropTypes.string,\n  html: PropTypes.string,\n  tags: PropTypes.array,\n}\n\nexport default Document\n","/* Lodash Addons\n * @version 2.0.1\n * https://github.com/helion3/lodash-addons\n * @copyright Copyright 2015 Helion3, and other contributors\n * @license Licensed under MIT\n *          see https://github.com/helion3/lodash-addons/blob/master/LICENSE\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) : typeof define === 'function' && define.amd ? define(['lodash'], factory) : global.LodashAddons = factory(global._);\n})(this, function (_) {\n  'use strict';\n  /**\n   * Throw a TypeError if value doesn't match one of any provided validation methods.\n   *\n   * @static\n   * @memberOf _\n   * @category Preconditions\n   * @param {mixed} value Value\n   * @return {void}\n   */\n\n  function check(value) {\n    var valid = false;\n\n    for (var _len = arguments.length, validators = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      validators[_key - 1] = arguments[_key];\n    }\n\n    _.each(validators, function (validator) {\n      return !(valid = validator(value));\n    });\n\n    if (!valid) {\n      throw new TypeError('Argument is not any of the accepted types.');\n    }\n  }\n  /**\n   * Iterates over keys of a collection, returning an array of all keys predicate returns truthy for.\n   * The predicate is invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @category Collection\n   * @param {object} collection The object to iterate over.\n   * @param {function} iteratee The function invoked per iteration.\n   * @return {array} Resulting keys\n   */\n\n\n  function filterKeys(collection, iteratee) {\n    return _.transform(collection, function (results, val, key) {\n      if (iteratee(val, key, collection)) {\n        results.push(key);\n      }\n    }, []);\n  }\n  /**\n   * Gets indices for which elements differ between two arrays.\n   *\n   * @static\n   * @memberOf _\n   * @category Collection\n   * @param {array} first First array\n   * @param {array} second Second array\n   * @return {array} Array of indices of differing elements\n   * @example\n   *\n   * _.differenceKeys([false, true], [false, false]);\n   * // => [1]\n   */\n\n\n  function differenceKeys(first, second) {\n    return filterKeys(first, function (val, key) {\n      return val !== second[key];\n    });\n  }\n  /**\n   * Base function for returning a default when the given value fails validation.\n   *\n   * @private\n   * @param {function} validator Validation function.\n   * @param {*} baseDefault Base default value.\n   * @param {*} value Given value.\n   * @param {*} replacement Custom replacement.\n   * @return {*} Final value.\n   */\n\n\n  function baseGetType(validator, baseDefault, value, replacement) {\n    var result = void 0;\n\n    if (validator(value)) {\n      result = value;\n    } else if (validator(replacement)) {\n      result = replacement;\n    } else {\n      result = baseDefault;\n    }\n\n    return result;\n  }\n  /**\n   * Returns value if a number, otherwise a default number.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final number.\n   * @example\n   *\n   * _.getNumber('');\n   * // => 0\n   *\n   * _.getNumber('', 100);\n   * // => 100\n   */\n\n\n  function getNumber(value, replacement) {\n    return baseGetType(_.isNumber, 0, value, replacement);\n  }\n  /**\n   * Generates a random alphanumeric string with length n.\n   *\n   * @static\n   * @memberOf _\n   * @category String\n   * @param {int} length Desired length.\n   * @return {string} String of random characters.\n   * @example\n   *\n   * _.generateKey(5);\n   * // => 'L7IpD'\n   */\n\n\n  function generateKey(length) {\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var possibleLength = possible.length - 1;\n    var text = '';\n\n    _.times(getNumber(length, 16), function () {\n      text += possible.charAt(_.random(possibleLength));\n    });\n\n    return text;\n  }\n  /**\n   * Returns value if an array, otherwise a default.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final array.\n   * @example\n   *\n   * _.getArray(null);\n   * // => []\n   *\n   * _.getArray(null, ['test']);\n   * // => ['test']\n   */\n\n\n  function getArray(value, replacement) {\n    return baseGetType(_.isArray, [], value, replacement);\n  }\n  /**\n   * Returns value if a boolean, otherwise a default boolean.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final boolean.\n   * @example\n   *\n   * _.getBoolean(null);\n   * // => false\n   *\n   * _.getBoolean(null, true);\n   * // => true\n   */\n\n\n  function getBoolean(value, replacement) {\n    return baseGetType(_.isBoolean, false, value, replacement);\n  }\n  /**\n   * Returns value if a finite number, otherwise a default number.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final number.\n   * @example\n   *\n   * _.getFinite('');\n   * // => 0\n   *\n   * _.getFinite('', 100);\n   * // => 100\n   *\n   * _.getFinite(NaN, 25);\n   * // => 25\n   */\n\n\n  function getFinite(value, replacement) {\n    return baseGetType(_.isFinite, 0, value, replacement);\n  }\n  /**\n   * Returns value if a function, otherwise a default function.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final function.\n   * @example\n   *\n   * _.getFunction(null);\n   * // => function () {}\n   */\n\n\n  function getFunction(value, replacement) {\n    return baseGetType(_.isFunction, _.noop, value, replacement);\n  }\n  /**\n   * Returns value if a Map, otherwise a default map.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final number.\n   */\n\n\n  function getMap(value, replacement) {\n    return baseGetType(_.isMap, new Map(), value, replacement);\n  }\n  /**\n   * Returns value if a object, otherwise a default object.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final object.\n   * @example\n   *\n   * _.getObject('');\n   * // => {}\n   */\n\n\n  function getObject(value, replacement) {\n    return baseGetType(_.isObject, {}, value, replacement);\n  }\n  /**\n   * Returns value if a plain object, otherwise a default object.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final object.\n   * @example\n   *\n   * _.getPlainObject('');\n   * // => {}\n   */\n\n\n  function getPlainObject(value, replacement) {\n    return baseGetType(_.isPlainObject, {}, value, replacement);\n  }\n  /**\n   * Gets the prototype for the given value.\n   *\n   * @static\n   * @memberOf _\n   * @category Util\n   * @param {*} value Source value\n   * @return {object} Found prototype or undefined.\n   * @example\n   *\n   * _.getPrototype(5);\n   * // => { toFixed: func(), ... }\n   */\n\n\n  function getPrototype(value) {\n    var prototype = void 0;\n\n    if (!_.isUndefined(value) && !_.isNull(value)) {\n      if (!_.isObject(value)) {\n        prototype = value.constructor.prototype;\n      } else if (_.isFunction(value)) {\n        prototype = value.prototype;\n      } else {\n        prototype = Object.getPrototypeOf(value);\n      }\n    }\n\n    return prototype;\n  }\n  /**\n   * Returns value if a Set, otherwise a default set.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {set} replacement Custom default if value is invalid type.\n   * @return {set} Final Set.\n   * @example\n   *\n   * _.getSet('');\n   * // => Set()\n   */\n\n\n  function getSet(value, replacement) {\n    return baseGetType(_.isSet, new Set(), value, replacement);\n  }\n  /**\n   * Returns value if a string, otherwise a default string.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final string.\n   * @example\n   *\n   * _.getString(false);\n   * // => ''\n   */\n\n\n  function getString(value, replacement) {\n    return baseGetType(_.isString, '', value, replacement);\n  }\n  /**\n   * Returns value if a WeakMap, otherwise a default WeakMap.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {weakmap} replacement Custom default if value is invalid type.\n   * @return {weakmap} Final map.\n   * @example\n   *\n   * _.getWeakMap(false);\n   * // => ''\n   */\n\n\n  function getWeakMap(value, replacement) {\n    return baseGetType(_.isWeakMap, new WeakMap(), value, replacement);\n  }\n  /**\n   * Returns value if a WeakSet, otherwise a default WeakSet.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {weakset} replacement Custom default if value is invalid type.\n   * @return {weakset} Final set.\n   * @example\n   *\n   * _.getWeakSet(false);\n   * // => ''\n   */\n\n\n  function getWeakSet(value, replacement) {\n    return baseGetType(_.isWeakSet, new WeakSet(), value, replacement);\n  }\n  /**\n   * If _.hasIn returns true, run a validator on value.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {mixed} value Collection for _.hasIn\n   * @param {string|number} path Path.\n   * @param {function} validator Function to validate value.\n   * @return {boolean} Whether collection has the path and it passes validation\n   */\n\n\n  function hasInOfType(value, path, validator) {\n    return _.hasIn(value, path) ? validator(_.get(value, path)) : false;\n  }\n  /**\n   * If _.has returns true, run a validator on value.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {mixed} value Collection for _.has\n   * @param {string} path Path\n   * @param {function} validator Function to validate value.\n   * @return {boolean} Whether collection has prop, and it passes validation\n   * @example\n   *\n   * _.hasOfType({ test: '' }, 'test', _.isString);\n   * // => true\n   */\n\n\n  function hasOfType(value, path, validator) {\n    return _.has(value, path) ? validator(_.get(value, path)) : false;\n  }\n  /**\n   * Converts a value to a boolean.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value Source value\n   * @return {boolean} Resulting boolean\n   * @example\n   *\n   * _.toBool(1);\n   * // => true\n   */\n\n\n  function toBool(value) {\n    return Boolean(value);\n  }\n  /**\n   * Checks if value is iterable.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {object} object An object\n   * @return {boolean} True if iterable\n   * @example\n   *\n   * _.isIterable([]);\n   * // => true\n   */\n\n\n  function isIterable(object) {\n    return toBool(object) && _.isFunction(object[Symbol.iterator]);\n  }\n  /**\n   * Checks if value is a non-empty string.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {object} string String\n   * @return {boolean} True if a non-empty string.\n   * @example\n   *\n   * _.isNonEmptyString('');\n   * // => false\n   */\n\n\n  function isNonEmptyString(string) {\n    return _.isString(string) && string.trim() !== '';\n  }\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n  /**\n   * Shorthand object creation when sole property is a variable, or a path.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {[object]} object Existing object (optional)\n   * @param {string|number} path Property\n   * @param {mixed} value Value\n   * @return {object} Resulting object\n   * @example\n   *\n   * // To create a new object:\n   *\n   * _.objectWith('key', 'value');\n   * // => { key: 'value' }\n   *\n   * _.objectWith('a.deep.path', 'value');\n   * // => {\n   *   a: {\n   *     deep: {\n   *   \t path: 'value'\n   *     }\n   *   }\n   * }\n   *\n   * // Using existing:\n   * _.objectWith({ a: 1 }, 'b', 2);\n   * // => { a: 1, b: 2 }\n   */\n\n\n  function objectWith() {\n    var args = _.reverse(arguments);\n\n    var _$take = _.take(args, 2),\n        _$take2 = slicedToArray(_$take, 2),\n        value = _$take2[0],\n        path = _$take2[1];\n\n    var object = _.nth(args, 2) || {};\n    return _.set(object, path, value);\n  }\n  /**\n   * Parses query string into key/value object.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {string} string Query string.\n   * @return {object} Key/value map.\n   * @example\n   *\n   * _.parseQueryString('key=value');\n   * // => { key: 'value' }\n   */\n\n\n  function parseQueryString(string) {\n    return _.transform(_.toString(string).split('&'), function (result, segment) {\n      var split = segment.split('=');\n      result[decodeURIComponent(split[0])] = decodeURIComponent(split[1]);\n    }, {});\n  }\n  /**\n   * Returns a number representing the sign of `value`.\n   *\n   * If `value` is a positive number, negative number, positive zero or negative zero,\n   * the function will return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Math\n   * @param {number} value A number\n   * @returns {number} A number representing the sign\n   * @example\n   *\n   * _.sign(10);\n   * // => 1\n   *\n   * _.sign(-10);\n   * // => -1\n   */\n\n\n  function sign(value) {\n    var sign = NaN;\n\n    if (_.isNumber(value)) {\n      if (value === 0) {\n        sign = value;\n      } else if (value >= 1) {\n        sign = 1;\n      } else if (value <= -1) {\n        sign = -1;\n      }\n    }\n\n    return sign;\n  }\n  /**\n   * Generates a url-safe \"slug\" form of a string.\n   *\n   * @static\n   * @memberOf _\n   * @category String\n   * @param {string} string String value.\n   * @return {string} URL-safe form of a string.\n   * @example\n   *\n   * _.slugify('A Test');\n   * // => a-test\n   */\n\n\n  function slugify(string) {\n    return _.deburr(string).trim().toLowerCase().replace(/ /g, '-').replace(/([^a-zA-Z0-9\\._-]+)/, '');\n  }\n  /**\n   * Parses a value by passing it to new Date().\n   *\n   * @static\n   * @memberOf _\n   * @category Date\n   * @param {string} val Value to be parsed\n   * @return {Date} Resulting date\n   */\n\n\n  function parseDate(val) {\n    return new Date(val);\n  }\n  /**\n   * Converts an object's key/values to a query string.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {object} object Source key/value collection\n   * @return {string} Query string\n   * @example\n   *\n   * _.toQueryString({ a: 1, b: 2 });\n   * // => a=1&b=2\n   */\n\n\n  function toQueryString(object) {\n    return _.transform(object, function (results, value, key) {\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }, []).join('&');\n  }\n  /**\n   * Transforms a value in each element of collection if the path is not undefined.\n   *\n   * @static\n   * @memberOf _\n   * @category Array\n   * @param {Array} collection Array of objects\n   * @param {string} path The path of the value to transform\n   * @param {function} transformer Callback which returns the transformed value\n   * @return {Array} Returns the array of results.\n   */\n\n\n  function transformValueMap(collection, path, transformer) {\n    _.each(collection, function (element) {\n      var val = _.get(element, path);\n\n      if (!_.isUndefined(val)) {\n        _.set(element, path, transformer(val));\n      }\n    });\n\n    return collection;\n  }\n\n  _.mixin({\n    check: check,\n    differenceKeys: differenceKeys,\n    filterKeys: filterKeys,\n    generateKey: generateKey,\n    getArray: getArray,\n    getBoolean: getBoolean,\n    getFinite: getFinite,\n    getFunction: getFunction,\n    getMap: getMap,\n    getNumber: getNumber,\n    getObject: getObject,\n    getPlainObject: getPlainObject,\n    getPrototype: getPrototype,\n    getSet: getSet,\n    getString: getString,\n    getWeakMap: getWeakMap,\n    getWeakSet: getWeakSet,\n    hasInOfType: hasInOfType,\n    hasOfType: hasOfType,\n    isIterable: isIterable,\n    isNonEmptyString: isNonEmptyString,\n    objectWith: objectWith,\n    parseQueryString: parseQueryString,\n    sign: sign,\n    slugify: slugify,\n    toBool: toBool,\n    toDate: parseDate,\n    toQueryString: toQueryString,\n    transformValueMap: transformValueMap,\n    // Aliases\n    fromQueryString: parseQueryString,\n    parseDate: parseDate,\n    with: objectWith\n  });\n\n  return _;\n});"],"sourceRoot":""}