{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["PageTemplate","data","markdownRemark","frontmatter","title","date","date_pretty","date_from_now","last_modified_at","last_modified_at_from_now","path","image","excerpt","toc","autoExcerpt","id","html","metaImage","childImageSharp","fixed","site","twitterCardType","titleAlt","datePublished","dateModified","description","article","key","hideMeta","datePretty","dateFromNow","dateModifiedFromNow","author"],"mappings":"4FAAA,gFA+DeA,UAtDM,SAAC,GAAc,IAAD,IAAXC,KAiBbC,eAjBwB,IAE/BC,YACEC,EAH6B,EAG7BA,MACAC,EAJ6B,EAI7BA,KACAC,EAL6B,EAK7BA,YACAC,EAN6B,EAM7BA,cACAC,EAP6B,EAO7BA,iBACAC,EAR6B,EAQ7BA,0BACAC,EAT6B,EAS7BA,KACAC,EAV6B,EAU7BA,MACAC,EAX6B,EAW7BA,QACAC,EAZ6B,EAY7BA,IAEOC,EAdsB,EAc/BF,QACAG,EAf+B,EAe/BA,GACAC,EAhB+B,EAgB/BA,KAEIC,EAAYN,EAAQA,EAAMO,gBAAgBC,MAAQC,IAAKT,MACvDU,EAAkBV,EAAQ,sBAAwB,UAExD,OACE,wBAAC,IAAD,KACE,wBAAC,IAAD,CACEP,MAAUA,EAAL,MAAgBgB,IAAKE,SAC1BZ,KAAMA,EACNa,cAAelB,EACfmB,aAAchB,EACdiB,YAAab,GAAWE,EACxBG,UAAWA,EACXI,gBAAiBA,EACjBK,SAAO,IAET,gCAAMX,GAAG,QACP,wBAAC,IAAD,CACEY,IAAKZ,EACLX,MAAOA,EACPwB,UAAQ,EACRL,cAAelB,EACfmB,aAAchB,EACdqB,WAAYvB,EACZwB,YAAavB,EACbwB,oBAAqBtB,EACrBC,KAAMA,EACNC,MAAOA,EACPE,IAAKA,EACLG,KAAMA,EACNgB,OAAQZ,IAAKY","file":"component---src-templates-page-js-4e213db66a102f3df615.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Document from '../components/document'\nimport site from '../../config/site'\n\nconst PageTemplate = ({ data }) => {\n  const {\n    frontmatter: {\n      title,\n      date,\n      date_pretty,\n      date_from_now,\n      last_modified_at,\n      last_modified_at_from_now,\n      path,\n      image,\n      excerpt,\n      toc,\n    },\n    excerpt: autoExcerpt,\n    id,\n    html,\n  } = data.markdownRemark\n  const metaImage = image ? image.childImageSharp.fixed : site.image\n  const twitterCardType = image ? 'summary_large_image' : 'summary'\n\n  return (\n    <Layout>\n      <SEO\n        title={`${title} - ${site.titleAlt}`}\n        path={path}\n        datePublished={date}\n        dateModified={last_modified_at}\n        description={excerpt || autoExcerpt}\n        metaImage={metaImage}\n        twitterCardType={twitterCardType}\n        article\n      />\n      <main id=\"main\">\n        <Document\n          key={id}\n          title={title}\n          hideMeta\n          datePublished={date}\n          dateModified={last_modified_at}\n          datePretty={date_pretty}\n          dateFromNow={date_from_now}\n          dateModifiedFromNow={last_modified_at_from_now}\n          path={path}\n          image={image}\n          toc={toc}\n          html={html}\n          author={site.author}\n        />\n      </main>\n    </Layout>\n  )\n}\n\nexport default PageTemplate\n\nPageTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport const pageQuery = graphql`\n  query($path: String) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      frontmatter {\n        title\n        date\n        date_pretty: date(formatString: \"MMMM Do, YYYY\")\n        date_from_now: date(fromNow: true)\n        last_modified_at\n        last_modified_at_from_now: last_modified_at(fromNow: true)\n        path\n        excerpt\n        toc\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1100, quality: 75) {\n              ...GatsbyImageSharpFluid_noBase64\n            }\n            fixed(width: 1100, quality: 75) {\n              src\n              height\n              width\n            }\n          }\n        }\n      }\n      id\n      html\n      excerpt\n    }\n  }\n`\n"],"sourceRoot":""}