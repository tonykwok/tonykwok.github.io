{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/templates/tags.js","webpack:///./src/styles/pagination.module.css"],"names":["Pagination","nextPath","previousPath","nextLabel","previousLabel","className","style","pagination","to","rel","item","iconPrev","itemText","itemRight","iconNext","_","require","Tags","data","pageContext","nextPagePath","previousPagePath","humanPageNumber","numberOfPages","tag","siteAuthor","site","siteMetadata","author","taxonomyYaml","taxonomyExcerpt","excerpt","taxonomyHtml","html","posts","allMarkdownRemark","edges","paginationTitle","metaImage","image","title","path","slugify","description","id","main","heading","intro","dangerouslySetInnerHTML","__html","content","list","map","node","autoExcerpt","timeToRead","frontmatter","date","date_pretty","key","datePretty","module","exports"],"mappings":"8FAAA,iDAuCeA,IAjCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,cAAtC,OACjBF,GAAgBD,EACd,+BAAKI,UAAWC,IAAMC,YACnBL,EACC,wBAAC,OAAD,CAAMM,GAAIN,EAAcO,IAAI,OAAOJ,UAAWC,IAAMI,MAClD,gCAAML,UAAWC,IAAMK,UAAvB,KACA,gCAAMN,UAAWC,IAAMM,UAAWR,IAGpC,+BAAKC,UAAWC,IAAMI,OAEvBT,EACC,wBAAC,OAAD,CACEO,GAAIP,EACJQ,IAAI,OACJJ,UAAcC,IAAMI,KAAX,IAAmBJ,IAAMO,WAElC,gCAAMR,UAAWC,IAAMM,UAAWT,GAClC,gCAAME,UAAWC,IAAMQ,UAAvB,MAGF,+BAAKT,UAAWC,IAAMI,QAGxB,O,kCC9BN,iHAYMK,EAAIC,EAAQ,QA2JHC,UAzJF,SAAC,GASP,IARLC,EAQI,EARJA,KAQI,IAPJC,YACEC,EAME,EANFA,aACAC,EAKE,EALFA,iBACAC,EAIE,EAJFA,gBACAC,EAGE,EAHFA,cACAC,EAEE,EAFFA,IAK0BC,EAIxBP,EALFQ,KACEC,aAAgBC,OAHhB,EAOAV,EAFFW,aAAyBC,EALvB,EAKcC,QAAgCC,EAL9C,EAKwCC,KACdC,EAC1BhB,EADFiB,kBAAqBC,MAEjBC,EACgB,IAApBf,EACI,GADJ,WAEeA,EAFf,OAEqCC,EACjCe,EAAYZ,IAAKa,MAEvB,OACE,wBAAC,IAAD,KACE,wBAAC,IAAD,CACEC,MAAK,GAAKhB,EAAMa,EAAX,MAAgCX,IAAKc,MAC1CC,KAAI,QAAU1B,EAAE2B,QAAQlB,GAApB,IACJmB,YACEb,GAAe,kCAAsCN,EAAtC,IAEjBc,UAAWA,IAEb,gCAAMM,GAAG,OAAOvC,UAAWC,IAAMuC,MAC/B,+BAAKxC,UAAWC,IAAMkC,OACpB,8BAAInC,UAAWC,IAAMwC,SACnB,wCACItB,EADJ,IACUa,IAGXL,GAAoC,IAApBV,GACf,+BACEjB,UAAWC,IAAMyC,MACjBC,wBAAyB,CAAEC,OAAQjB,MAIzC,+BAAK3B,UAAWC,IAAM4C,SACpB,+BAAK7C,UAAWC,IAAM6C,MACnBjB,EAAMkB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEVT,EAYES,EAZFT,GACSU,EAWPD,EAXFtB,QACAwB,EAUEF,EAVFE,WAJqB,EAcnBF,EATFG,YACEhB,EANmB,EAMnBA,MACAiB,EAPmB,EAOnBA,KACAC,EARmB,EAQnBA,YACAjB,EATmB,EASnBA,KACAb,EAVmB,EAUnBA,OACAW,EAXmB,EAWnBA,MACAR,EAZmB,EAYnBA,QAIJ,OACE,wBAAC,IAAD,CACE4B,IAAKf,EACLJ,MAAOA,EACPiB,KAAMA,EACNG,WAAYF,EACZjB,KAAMA,EACNb,OAAQA,GAAUH,EAClB8B,WAAYA,EACZhB,MAAOA,EACPR,QAASA,GAAWuB,UAOhC,wBAAC,IAAD,CACEpD,aAAcmB,EACdjB,cAAc,cACdH,SAAUmB,EACVjB,UAAU,mB,qBCnGlB0D,EAAOC,QAAU,CAAC,WAAa,uCAAuC,KAAO,iCAAiC,SAAW,qCAAqC,UAAY,sCAAsC,UAAY,sCAAsC,SAAW,qCAAqC,SAAW,qCAAqC,YAAc,GAAG,iBAAmB,GAAG,gBAAkB","file":"component---src-templates-tags-js-2b803c3e298f40e89c53.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport style from '../styles/pagination.module.css'\n\nconst Pagination = ({ nextPath, previousPath, nextLabel, previousLabel }) =>\n  previousPath || nextPath ? (\n    <nav className={style.pagination}>\n      {previousPath ? (\n        <Link to={previousPath} rel=\"prev\" className={style.item}>\n          <span className={style.iconPrev}>←</span>\n          <span className={style.itemText}>{previousLabel}</span>\n        </Link>\n      ) : (\n        <div className={style.item} />\n      )}\n      {nextPath ? (\n        <Link\n          to={nextPath}\n          rel=\"next\"\n          className={`${style.item} ${style.itemRight}`}\n        >\n          <span className={style.itemText}>{nextLabel}</span>\n          <span className={style.iconNext}>→</span>\n        </Link>\n      ) : (\n        <div className={style.item} />\n      )}\n    </nav>\n  ) : null\n\nPagination.propTypes = {\n  nextPath: PropTypes.string,\n  previousPath: PropTypes.string,\n  nextLabel: PropTypes.string,\n  previousLabel: PropTypes.string,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Entry from '../components/entry'\nimport Pagination from '../components/pagination'\n\nimport site from '../../config/site'\n\nimport style from '../styles/archive.module.css'\n\nconst _ = require('lodash-addons')\n\nconst Tags = ({\n  data,\n  pageContext: {\n    nextPagePath,\n    previousPagePath,\n    humanPageNumber,\n    numberOfPages,\n    tag,\n  },\n}) => {\n  const {\n    site: {\n      siteMetadata: { author: siteAuthor },\n    },\n    taxonomyYaml: { excerpt: taxonomyExcerpt, html: taxonomyHtml },\n    allMarkdownRemark: { edges: posts },\n  } = data\n  const paginationTitle =\n    humanPageNumber === 1\n      ? ''\n      : ` - Page ${humanPageNumber} of ${numberOfPages}`\n  const metaImage = site.image\n\n  return (\n    <Layout>\n      <SEO\n        title={`${tag}${paginationTitle} - ${site.title}`}\n        path={`/tag/${_.slugify(tag)}/`}\n        description={\n          taxonomyExcerpt || `An archive of posts related to ${tag}.`\n        }\n        metaImage={metaImage}\n      />\n      <main id=\"main\" className={style.main}>\n        <div className={style.title}>\n          <h1 className={style.heading}>\n            <span>\n              #{tag} {paginationTitle}\n            </span>\n          </h1>\n          {taxonomyHtml && humanPageNumber === 1 && (\n            <div\n              className={style.intro}\n              dangerouslySetInnerHTML={{ __html: taxonomyHtml }}\n            />\n          )}\n        </div>\n        <div className={style.content}>\n          <div className={style.list}>\n            {posts.map(({ node }) => {\n              const {\n                id,\n                excerpt: autoExcerpt,\n                timeToRead,\n                frontmatter: {\n                  title,\n                  date,\n                  date_pretty,\n                  path,\n                  author,\n                  image,\n                  excerpt,\n                },\n              } = node\n\n              return (\n                <Entry\n                  key={id}\n                  title={title}\n                  date={date}\n                  datePretty={date_pretty}\n                  path={path}\n                  author={author || siteAuthor}\n                  timeToRead={timeToRead}\n                  image={image}\n                  excerpt={excerpt || autoExcerpt}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </main>\n      <Pagination\n        previousPath={previousPagePath}\n        previousLabel=\"Newer posts\"\n        nextPath={nextPagePath}\n        nextLabel=\"Older posts\"\n      />\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string,\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n    humanPageNumber: PropTypes.number,\n    numberOfPages: PropTypes.number,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!, $tag: String!) {\n    site {\n      siteMetadata {\n        author {\n          name\n          url\n        }\n      }\n    }\n    taxonomyYaml(id: { eq: $tag }) {\n      id\n      excerpt\n      html\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { tags: { in: [$tag] }, published: { ne: false } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(format: HTML)\n          timeToRead\n          frontmatter {\n            title\n            date\n            date_pretty: date(formatString: \"MMMM Do, YYYY\")\n            date_from_now: date(fromNow: true)\n            path\n            author\n            excerpt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 760, quality: 75) {\n                  ...GatsbyImageSharpFluid_noBase64\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Tags\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination-module--pagination--5u0we\",\"item\":\"pagination-module--item--2FbSP\",\"itemText\":\"pagination-module--itemText--q_ljE\",\"itemRight\":\"pagination-module--itemRight--2XC01\",\"itemLabel\":\"pagination-module--itemLabel--1yC7K\",\"iconNext\":\"pagination-module--iconNext--2kIia\",\"iconPrev\":\"pagination-module--iconPrev--1xG44\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};"],"sourceRoot":""}