{"version":3,"sources":["webpack:///./src/styles/archive.module.css","webpack:///./src/pages/faqs/index.js"],"names":["module","exports","metaImage","site","image","FaqsPage","edges","data","allMarkdownRemark","title","titleAlt","path","description","className","style","main","heading","content","to","map","faq","key","node","id","frontmatter"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,KAAO,8BAA8B,MAAQ,+BAA+B,MAAQ,+BAA+B,QAAU,iCAAiC,WAAa,oCAAoC,MAAQ,+BAA+B,MAAQ,+BAA+B,QAAU,iCAAiC,QAAU,iCAAiC,KAAO,8BAA8B,SAAW,kCAAkC,iBAAmB,0CAA0C,WAAa,oCAAoC,MAAQ,+BAA+B,YAAc,GAAG,iBAAmB,GAAG,gBAAkB,K,kCCD/uB,qGAUMC,EAAYC,IAAKC,MAmERC,UAlEE,SAAC,GAAD,IAEQC,EAFR,EACfC,KACEC,kBAAqBF,MAFR,OAKf,wBAAC,IAAD,KACE,wBAAC,IAAD,CACEG,MAAK,gCAAkCN,IAAKO,SAC5CC,KAAK,SACLC,YAAY,sGAEZV,UAAWA,IAEb,gCAAMW,UAAWC,IAAMC,MACrB,+BAAKF,UAAWC,IAAML,OACpB,8BAAII,UAAWC,IAAME,SACnB,oEAGJ,+BAAKH,UAAWC,IAAMG,SACpB,iIAEwB,wBAAC,OAAD,CAAMC,GAAG,aAAT,UAFxB,KAIA,kCACGZ,EAAMa,KAAI,SAACC,GAAD,OACT,8BAAIC,IAAKD,EAAIE,KAAKC,IAChB,wBAAC,OAAD,CAAML,GAAIE,EAAIE,KAAKE,YAAYb,MAC5BS,EAAIE,KAAKE,YAAYf","file":"component---src-pages-faqs-index-js-255cdbb2e2faf15a0c9f.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"archive-module--icon--89JmZ\",\"spin\":\"archive-module--spin--14aNj\",\"logo\":\"archive-module--logo--3c8aR\",\"title\":\"archive-module--title--3ZGBp\",\"cover\":\"archive-module--cover--2sv0o\",\"heading\":\"archive-module--heading--GjChR\",\"subHeading\":\"archive-module--subHeading--3rgl2\",\"intro\":\"archive-module--intro--2EflT\",\"grain\":\"archive-module--grain--5gDu8\",\"content\":\"archive-module--content--2dCC9\",\"navList\":\"archive-module--navList--3yIMk\",\"list\":\"archive-module--list--W5ZBJ\",\"gridList\":\"archive-module--gridList--2iz3T\",\"gridListExpanded\":\"archive-module--gridListExpanded--1L2X2\",\"columnList\":\"archive-module--columnList--3dK8g\",\"count\":\"archive-module--count--RREhZ\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","import { graphql, Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\n\nimport site from '../../../config/site'\n\nimport style from '../../styles/archive.module.css'\n\nconst metaImage = site.image\nconst FaqsPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <SEO\n      title={`Frequently asked questions | ${site.titleAlt}`}\n      path=\"/faqs/\"\n      description=\"Because no one likes to repeat things here's a compilation\n      of answers to questions I'm often asked.\"\n      metaImage={metaImage}\n    />\n    <main className={style.main}>\n      <div className={style.title}>\n        <h1 className={style.heading}>\n          <span>Frequently asked questions</span>\n        </h1>\n      </div>\n      <div className={style.content}>\n        <p>\n          Did I leave something out that you were looking for an answer to? Feel\n          free to reach out and <Link to=\"/contact/\">ask me</Link>.\n        </p>\n        <ul>\n          {edges.map((faq) => (\n            <li key={faq.node.id}>\n              <Link to={faq.node.frontmatter.path}>\n                {faq.node.frontmatter.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </main>\n  </Layout>\n)\n\nFaqsPage.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport const pageQuery = graphql`\n  query FaqsQuery {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/pages/faqs/\" }\n        fields: { sourceName: { ne: \"comments\" } }\n        frontmatter: { published: { ne: false }, output: { ne: false } }\n      }\n      sort: { fields: [frontmatter___order], order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            path\n            title\n          }\n          fileAbsolutePath\n        }\n      }\n    }\n  }\n`\n\nexport default FaqsPage\n"],"sourceRoot":""}