{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["HomePage","data","siteAuthor","site","siteMetadata","author","featuredPosts","edges","recentPosts","title","description","path","metaImage","image","id","className","style","main","heading","href","content","gridList","map","node","autoExcerpt","excerpt","timeToRead","frontmatter","date","date_pretty","tags","authors","key","datePretty","subHeading","list","gridListExpanded","navList"],"mappings":"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","file":"component---src-pages-index-js-dc08cd93d407cd7e2883.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Entry from '../components/entry'\n\nimport style from '../styles/archive.module.css'\n\nimport site from '../../config/site'\n\nconst HomePage = ({ data }) => {\n  const {\n    site: {\n      siteMetadata: { author: siteAuthor },\n    },\n    featuredPosts: { edges: featuredPosts },\n    recentPosts: { edges: recentPosts },\n  } = data\n  return (\n    <Layout>\n      <SEO\n        title={`${site.title} - ${site.description}`}\n        path=\"/\"\n        description={site.description}\n        metaImage={site.image}\n      />\n      <main id=\"main\" className={style.main}>\n        {/* <div className={style.title}>\n          <h1 className={style.heading}>\n            <span>\n              Made Mistakes is the personal site of{' '}\n              <a href=\"/about/\">Michael&nbsp;Rose</a>.\n            </span>\n          </h1>\n          <div className={style.intro}>\n            <p>\n              I'm just another boring, tattooed, time traveling designer from\n              Buffalo New York who enjoys eating chicken wings, sketching on an\n              iPad Pro, building with static site generators, and playing\n              Nintendo Switch.\n            </p>\n          </div>\n          <Img\n            fluid={data.aboutImage.childImageSharp.fluid}\n            className={style.cover}\n            backgroundColor=\"var(--input-background-color)\"\n          />\n        </div> */}\n        <div className={style.title}>\n          <h1 className={style.heading}>\n            <span>Welcome to the website where I share things I've found on the way getting into the <a href=\"/tag/\">#programming</a>{' '}world.</span>\n          </h1>\n        </div>\n        {/* <div className={style.content}>\n          <Img\n            fluid={data.aboutImage.childImageSharp.fluid}\n            backgroundColor=\"var(--input-background-color)\"\n          />\n        </div> */}\n        <div className={style.content}>\n          {/* <h2 className={style.subHeading}>\n            <span>Featured articles</span>\n          </h2> */}\n          <div className={style.gridList}>\n            {featuredPosts.map(({ node }) => {\n              const {\n                id,\n                excerpt: autoExcerpt,\n                timeToRead,\n                frontmatter: {\n                  title,\n                  date,\n                  date_pretty,\n                  path,\n                  tags,\n                  author,\n                  authors,\n                  excerpt,\n                  image,\n                },\n              } = node\n\n              return (\n                <Entry\n                  key={id}\n                  title={title}\n                  date={date}\n                  datePretty={date_pretty}\n                  path={path}\n                  authors={authors}\n                  author={author || siteAuthor}\n                  timeToRead={timeToRead}\n                  image={image}\n                  excerpt={excerpt || autoExcerpt}\n                  tags={tags}\n                />\n              )\n            })}\n          </div>\n          <h2 className={style.subHeading}>\n            <span>Recent posts</span>\n          </h2>\n          <div className={style.list}>\n            {recentPosts.map(({ node }) => {\n              const {\n                id,\n                excerpt: autoExcerpt,\n                timeToRead,\n                frontmatter: {\n                  title,\n                  date,\n                  date_pretty,\n                  path,\n                  author,\n                  authors,\n                  excerpt,\n                  tags,\n                },\n              } = node\n\n              return (\n                <Entry\n                  key={id}\n                  title={title}\n                  date={date}\n                  datePretty={date_pretty}\n                  path={path}\n                  author={author || siteAuthor}\n                  authors={authors}\n                  timeToRead={timeToRead}\n                  excerpt={excerpt || autoExcerpt}\n                  tags={tags}\n                />\n              )\n            })}\n          </div>\n          <h2 className={style.subHeading}>\n            <span>Explore more on this site</span>\n          </h2>\n          <div>\n            <ul className={`${style.gridListExpanded} ${style.navList}`}>\n              <li key=\"articles\">\n                <Entry\n                  key=\"articles-home-link\"\n                  title=\"Articles\"\n                  path=\"/articles/\"\n                  excerpt=\"<p>Long form writing mostly about design and web development.</p>\"\n                />\n              </li>\n              <li key=\"notes\">\n                <Entry\n                  key=\"notes-home-link\"\n                  title=\"Notes\"\n                  path=\"/notes/\"\n                  excerpt=\"<p>Thoughts, inspiration, mistakes, and other minutia you&rsquo;d find in a blog.</p>\"\n                />\n              </li>\n              <li key=\"works\">\n                <Entry\n                  key=\"works-home-link\"\n                  title=\"Works\"\n                  path=\"/work/\"\n                  excerpt=\"<p>Hand-picked selection of things I've designed, illustrated,\n                  and developed.</p>\"\n                />\n              </li>\n              <li key=\"mastering-paper\">\n                <Entry\n                  key=\"mastering-paper-home-link\"\n                  title=\"Mastering Paper\"\n                  path=\"/mastering-paper/\"\n                  excerpt=\"<p>Tutorials to help master the iOS drawing app&mdash;\n                Paper</p>\"\n                />\n              </li>\n              <li key=\"contact\">\n                <Entry\n                  key=\"contact-home-link\"\n                  title=\"Contact\"\n                  path=\"/contact/\"\n                  excerpt=\"<p>Preferred methods of sending questions, messages, and\n                  love letters to me.</p>\"\n                />\n              </li>\n              <li key=\"support\">\n                <Entry\n                  key=\"support-home-link\"\n                  title=\"Show your support\"\n                  path=\"/support/\"\n                  excerpt=\"<p>Give thanks for the free open source goodies I provide.</p>\"\n                />\n              </li>\n              <li key=\"faqs\">\n                <Entry\n                  key=\"faqs-home-link\"\n                  title=\"Frequently asked questions\"\n                  path=\"/faqs/\"\n                  excerpt=\"<p>There&rsquo;s no such thing as a dumb question&hellip;</p>\"\n                />\n              </li>\n              <li key=\"topics\">\n                <Entry\n                  key=\"topics-home-link\"\n                  title=\"All topics\"\n                  path=\"/tag/\"\n                  excerpt=\"<p>Archive of all posts organized by topic.</p>\"\n                />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </main>\n    </Layout>\n  )\n}\n\nHomePage.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    site {\n      siteMetadata {\n        author {\n          name\n          url\n        }\n      }\n    }\n    featuredPosts: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/posts/\" }\n        fields: { sourceName: { ne: \"comments\" } }\n        frontmatter: {\n          featured: { eq: true }\n          published: { ne: false }\n          output: { ne: false }\n        }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 6\n    ) {\n      edges {\n        node {\n          id\n          excerpt(format: HTML)\n          timeToRead\n          frontmatter {\n            title\n            authors {\n              id\n              name\n            }\n            date\n            date_pretty: date(formatString: \"MMMM Do, YYYY\")\n            path\n            excerpt\n            featured\n            categories\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 400, quality: 75) {\n                  ...GatsbyImageSharpFluid_noBase64\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    recentPosts: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/posts/\" }\n        fields: { sourceName: { ne: \"comments\" } }\n        frontmatter: {\n          featured: { ne: true }\n          published: { ne: false }\n          output: { ne: false }\n          categories: { nin: \"work\" }\n        }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 3\n    ) {\n      edges {\n        node {\n          id\n          excerpt(format: HTML)\n          timeToRead\n          frontmatter {\n            title\n            authors {\n              id\n              name\n            }\n            date\n            date_pretty: date(formatString: \"MMMM Do, YYYY\")\n            path\n            excerpt\n            tags\n          }\n        }\n      }\n    }\n    aboutImage: file(relativePath: { eq: \"made-mistakes-landing.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, maxHeight: 800, quality: 90) {\n          ...GatsbyImageSharpFluid_noBase64\n        }\n      }\n    }\n  }\n`\n\nexport default HomePage\n"],"sourceRoot":""}