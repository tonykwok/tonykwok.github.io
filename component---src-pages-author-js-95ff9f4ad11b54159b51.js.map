{"version":3,"sources":["webpack:///./src/pages/author.js","webpack:///./src/styles/archive.module.css","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/lodash-addons/dist/lodash-addons.js"],"names":["_","require","metaImage","site","image","AuthorsPage","propName","data","authors","allAuthorYaml","nodes","group","allMarkdownRemark","lut","reduce","map","author","id","name","console","log","title","titleAlt","path","description","className","style","main","heading","content","subHeading","columnList","sort","a","b","toLowerCase","matched","fieldValue","authorName","key","to","slugify","count","totalCount","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","filterKeys","collection","iteratee","transform","results","val","push","baseGetType","validator","baseDefault","value","replacement","getNumber","isNumber","toBool","Boolean","slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","sliceIterator","TypeError","objectWith","args","reverse","arguments","_$take","take","_$take2","object","nth","set","parseQueryString","string","toString","split","result","segment","decodeURIComponent","parseDate","Date","mixin","check","valid","_len","validators","_key","each","differenceKeys","first","second","generateKey","possible","possibleLength","text","times","charAt","random","getArray","getBoolean","isBoolean","getFinite","isFinite","getFunction","isFunction","noop","getMap","isMap","Map","getObject","isObject","getPlainObject","isPlainObject","getPrototype","prototype","isUndefined","isNull","getPrototypeOf","constructor","getSet","isSet","Set","getString","isString","getWeakMap","isWeakMap","WeakMap","getWeakSet","isWeakSet","WeakSet","hasInOfType","hasIn","hasOfType","has","isIterable","isNonEmptyString","trim","sign","NaN","deburr","replace","toDate","toQueryString","encodeURIComponent","join","transformValueMap","transformer","element","fromQueryString","with","factory"],"mappings":"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","file":"component---src-pages-author-js-95ff9f4ad11b54159b51.js","sourcesContent":["import { graphql, Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport site from '../../config/site'\n\nimport style from '../styles/archive.module.css'\n\nconst _ = require('lodash-addons')\n\nconst metaImage = site.image\n\n// Sort object alphabetically function\nconst propComparator = (propName) => (a, b) =>\n  a[propName].toLowerCase() == b[propName].toLowerCase()\n    ? 0\n    : a[propName].toLowerCase() < b[propName].toLowerCase()\n    ? -1\n    : 1\n\nconst AuthorsPage = ({\n  data: {\n    allAuthorYaml: {\n        nodes: authors\n    },\n    allMarkdownRemark: {\n        group\n    }\n  }\n}) => {\n  // Convert object array into hashmap\n  const lut = authors.reduce((map, author) => (map[author.id] = author.name, map), {})\n  console.log(lut)\n  return (\n    <Layout>\n      <SEO\n        title={`All Authors | ${site.titleAlt}`}\n        path=\"/author/\"\n        description=\"An archive of posts organized by author.\"\n        metaImage={metaImage}\n      />\n      <main id=\"main\" className={style.main}>\n        <div className={style.title}>\n          <h1 className={style.heading}>\n            <span>All authors</span>\n          </h1>\n        </div>\n        <div className={style.content}>\n          <h2 className={style.subHeading}>\n            <span>Browse by author</span>\n          </h2>\n          <div className={style.columnList}>\n            <ul>\n              {group.sort(propComparator(`fieldValue`)).map((author) => {\n                const matched = lut[author.fieldValue]\n                const authorName = matched ? matched : author.fieldValue\n                return (\n                  <li key={author.fieldValue}>\n                    <Link to={`/author/${_.slugify(author.fieldValue)}/`}>\n                      <strong>{authorName}</strong>{' '}\n                      <span className={style.count}>{author.totalCount}</span>\n                    </Link>\n                  </li>\n                )})\n              }\n            </ul>\n          </div>\n        </div>\n      </main>\n    </Layout>\n  )\n}\n\nAuthorsPage.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport const pageQuery = graphql`\n  query AuthorsQuery {\n    allAuthorYaml {\n      nodes {\n        id\n        name\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { published: { ne: false } } }) {\n      group(field: frontmatter___authors___id) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default AuthorsPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"archive-module--icon--89JmZ\",\"spin\":\"archive-module--spin--14aNj\",\"logo\":\"archive-module--logo--3c8aR\",\"title\":\"archive-module--title--3ZGBp\",\"cover\":\"archive-module--cover--2sv0o\",\"heading\":\"archive-module--heading--GjChR\",\"subHeading\":\"archive-module--subHeading--3rgl2\",\"intro\":\"archive-module--intro--2EflT\",\"grain\":\"archive-module--grain--5gDu8\",\"content\":\"archive-module--content--2dCC9\",\"navList\":\"archive-module--navList--3yIMk\",\"list\":\"archive-module--list--W5ZBJ\",\"gridList\":\"archive-module--gridList--2iz3T\",\"gridListExpanded\":\"archive-module--gridListExpanded--1L2X2\",\"columnList\":\"archive-module--columnList--3dK8g\",\"count\":\"archive-module--count--RREhZ\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* Lodash Addons\n * @version 2.0.1\n * https://github.com/helion3/lodash-addons\n * @copyright Copyright 2015 Helion3, and other contributors\n * @license Licensed under MIT\n *          see https://github.com/helion3/lodash-addons/blob/master/LICENSE\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) : typeof define === 'function' && define.amd ? define(['lodash'], factory) : global.LodashAddons = factory(global._);\n})(this, function (_) {\n  'use strict';\n  /**\n   * Throw a TypeError if value doesn't match one of any provided validation methods.\n   *\n   * @static\n   * @memberOf _\n   * @category Preconditions\n   * @param {mixed} value Value\n   * @return {void}\n   */\n\n  function check(value) {\n    var valid = false;\n\n    for (var _len = arguments.length, validators = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      validators[_key - 1] = arguments[_key];\n    }\n\n    _.each(validators, function (validator) {\n      return !(valid = validator(value));\n    });\n\n    if (!valid) {\n      throw new TypeError('Argument is not any of the accepted types.');\n    }\n  }\n  /**\n   * Iterates over keys of a collection, returning an array of all keys predicate returns truthy for.\n   * The predicate is invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @category Collection\n   * @param {object} collection The object to iterate over.\n   * @param {function} iteratee The function invoked per iteration.\n   * @return {array} Resulting keys\n   */\n\n\n  function filterKeys(collection, iteratee) {\n    return _.transform(collection, function (results, val, key) {\n      if (iteratee(val, key, collection)) {\n        results.push(key);\n      }\n    }, []);\n  }\n  /**\n   * Gets indices for which elements differ between two arrays.\n   *\n   * @static\n   * @memberOf _\n   * @category Collection\n   * @param {array} first First array\n   * @param {array} second Second array\n   * @return {array} Array of indices of differing elements\n   * @example\n   *\n   * _.differenceKeys([false, true], [false, false]);\n   * // => [1]\n   */\n\n\n  function differenceKeys(first, second) {\n    return filterKeys(first, function (val, key) {\n      return val !== second[key];\n    });\n  }\n  /**\n   * Base function for returning a default when the given value fails validation.\n   *\n   * @private\n   * @param {function} validator Validation function.\n   * @param {*} baseDefault Base default value.\n   * @param {*} value Given value.\n   * @param {*} replacement Custom replacement.\n   * @return {*} Final value.\n   */\n\n\n  function baseGetType(validator, baseDefault, value, replacement) {\n    var result = void 0;\n\n    if (validator(value)) {\n      result = value;\n    } else if (validator(replacement)) {\n      result = replacement;\n    } else {\n      result = baseDefault;\n    }\n\n    return result;\n  }\n  /**\n   * Returns value if a number, otherwise a default number.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final number.\n   * @example\n   *\n   * _.getNumber('');\n   * // => 0\n   *\n   * _.getNumber('', 100);\n   * // => 100\n   */\n\n\n  function getNumber(value, replacement) {\n    return baseGetType(_.isNumber, 0, value, replacement);\n  }\n  /**\n   * Generates a random alphanumeric string with length n.\n   *\n   * @static\n   * @memberOf _\n   * @category String\n   * @param {int} length Desired length.\n   * @return {string} String of random characters.\n   * @example\n   *\n   * _.generateKey(5);\n   * // => 'L7IpD'\n   */\n\n\n  function generateKey(length) {\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var possibleLength = possible.length - 1;\n    var text = '';\n\n    _.times(getNumber(length, 16), function () {\n      text += possible.charAt(_.random(possibleLength));\n    });\n\n    return text;\n  }\n  /**\n   * Returns value if an array, otherwise a default.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final array.\n   * @example\n   *\n   * _.getArray(null);\n   * // => []\n   *\n   * _.getArray(null, ['test']);\n   * // => ['test']\n   */\n\n\n  function getArray(value, replacement) {\n    return baseGetType(_.isArray, [], value, replacement);\n  }\n  /**\n   * Returns value if a boolean, otherwise a default boolean.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final boolean.\n   * @example\n   *\n   * _.getBoolean(null);\n   * // => false\n   *\n   * _.getBoolean(null, true);\n   * // => true\n   */\n\n\n  function getBoolean(value, replacement) {\n    return baseGetType(_.isBoolean, false, value, replacement);\n  }\n  /**\n   * Returns value if a finite number, otherwise a default number.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final number.\n   * @example\n   *\n   * _.getFinite('');\n   * // => 0\n   *\n   * _.getFinite('', 100);\n   * // => 100\n   *\n   * _.getFinite(NaN, 25);\n   * // => 25\n   */\n\n\n  function getFinite(value, replacement) {\n    return baseGetType(_.isFinite, 0, value, replacement);\n  }\n  /**\n   * Returns value if a function, otherwise a default function.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final function.\n   * @example\n   *\n   * _.getFunction(null);\n   * // => function () {}\n   */\n\n\n  function getFunction(value, replacement) {\n    return baseGetType(_.isFunction, _.noop, value, replacement);\n  }\n  /**\n   * Returns value if a Map, otherwise a default map.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final number.\n   */\n\n\n  function getMap(value, replacement) {\n    return baseGetType(_.isMap, new Map(), value, replacement);\n  }\n  /**\n   * Returns value if a object, otherwise a default object.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final object.\n   * @example\n   *\n   * _.getObject('');\n   * // => {}\n   */\n\n\n  function getObject(value, replacement) {\n    return baseGetType(_.isObject, {}, value, replacement);\n  }\n  /**\n   * Returns value if a plain object, otherwise a default object.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final object.\n   * @example\n   *\n   * _.getPlainObject('');\n   * // => {}\n   */\n\n\n  function getPlainObject(value, replacement) {\n    return baseGetType(_.isPlainObject, {}, value, replacement);\n  }\n  /**\n   * Gets the prototype for the given value.\n   *\n   * @static\n   * @memberOf _\n   * @category Util\n   * @param {*} value Source value\n   * @return {object} Found prototype or undefined.\n   * @example\n   *\n   * _.getPrototype(5);\n   * // => { toFixed: func(), ... }\n   */\n\n\n  function getPrototype(value) {\n    var prototype = void 0;\n\n    if (!_.isUndefined(value) && !_.isNull(value)) {\n      if (!_.isObject(value)) {\n        prototype = value.constructor.prototype;\n      } else if (_.isFunction(value)) {\n        prototype = value.prototype;\n      } else {\n        prototype = Object.getPrototypeOf(value);\n      }\n    }\n\n    return prototype;\n  }\n  /**\n   * Returns value if a Set, otherwise a default set.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {set} replacement Custom default if value is invalid type.\n   * @return {set} Final Set.\n   * @example\n   *\n   * _.getSet('');\n   * // => Set()\n   */\n\n\n  function getSet(value, replacement) {\n    return baseGetType(_.isSet, new Set(), value, replacement);\n  }\n  /**\n   * Returns value if a string, otherwise a default string.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {number} replacement Custom default if value is invalid type.\n   * @return {number} Final string.\n   * @example\n   *\n   * _.getString(false);\n   * // => ''\n   */\n\n\n  function getString(value, replacement) {\n    return baseGetType(_.isString, '', value, replacement);\n  }\n  /**\n   * Returns value if a WeakMap, otherwise a default WeakMap.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {weakmap} replacement Custom default if value is invalid type.\n   * @return {weakmap} Final map.\n   * @example\n   *\n   * _.getWeakMap(false);\n   * // => ''\n   */\n\n\n  function getWeakMap(value, replacement) {\n    return baseGetType(_.isWeakMap, new WeakMap(), value, replacement);\n  }\n  /**\n   * Returns value if a WeakSet, otherwise a default WeakSet.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {mixed} value Source value\n   * @param {weakset} replacement Custom default if value is invalid type.\n   * @return {weakset} Final set.\n   * @example\n   *\n   * _.getWeakSet(false);\n   * // => ''\n   */\n\n\n  function getWeakSet(value, replacement) {\n    return baseGetType(_.isWeakSet, new WeakSet(), value, replacement);\n  }\n  /**\n   * If _.hasIn returns true, run a validator on value.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {mixed} value Collection for _.hasIn\n   * @param {string|number} path Path.\n   * @param {function} validator Function to validate value.\n   * @return {boolean} Whether collection has the path and it passes validation\n   */\n\n\n  function hasInOfType(value, path, validator) {\n    return _.hasIn(value, path) ? validator(_.get(value, path)) : false;\n  }\n  /**\n   * If _.has returns true, run a validator on value.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {mixed} value Collection for _.has\n   * @param {string} path Path\n   * @param {function} validator Function to validate value.\n   * @return {boolean} Whether collection has prop, and it passes validation\n   * @example\n   *\n   * _.hasOfType({ test: '' }, 'test', _.isString);\n   * // => true\n   */\n\n\n  function hasOfType(value, path, validator) {\n    return _.has(value, path) ? validator(_.get(value, path)) : false;\n  }\n  /**\n   * Converts a value to a boolean.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value Source value\n   * @return {boolean} Resulting boolean\n   * @example\n   *\n   * _.toBool(1);\n   * // => true\n   */\n\n\n  function toBool(value) {\n    return Boolean(value);\n  }\n  /**\n   * Checks if value is iterable.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {object} object An object\n   * @return {boolean} True if iterable\n   * @example\n   *\n   * _.isIterable([]);\n   * // => true\n   */\n\n\n  function isIterable(object) {\n    return toBool(object) && _.isFunction(object[Symbol.iterator]);\n  }\n  /**\n   * Checks if value is a non-empty string.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {object} string String\n   * @return {boolean} True if a non-empty string.\n   * @example\n   *\n   * _.isNonEmptyString('');\n   * // => false\n   */\n\n\n  function isNonEmptyString(string) {\n    return _.isString(string) && string.trim() !== '';\n  }\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n  /**\n   * Shorthand object creation when sole property is a variable, or a path.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {[object]} object Existing object (optional)\n   * @param {string|number} path Property\n   * @param {mixed} value Value\n   * @return {object} Resulting object\n   * @example\n   *\n   * // To create a new object:\n   *\n   * _.objectWith('key', 'value');\n   * // => { key: 'value' }\n   *\n   * _.objectWith('a.deep.path', 'value');\n   * // => {\n   *   a: {\n   *     deep: {\n   *   \t path: 'value'\n   *     }\n   *   }\n   * }\n   *\n   * // Using existing:\n   * _.objectWith({ a: 1 }, 'b', 2);\n   * // => { a: 1, b: 2 }\n   */\n\n\n  function objectWith() {\n    var args = _.reverse(arguments);\n\n    var _$take = _.take(args, 2),\n        _$take2 = slicedToArray(_$take, 2),\n        value = _$take2[0],\n        path = _$take2[1];\n\n    var object = _.nth(args, 2) || {};\n    return _.set(object, path, value);\n  }\n  /**\n   * Parses query string into key/value object.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {string} string Query string.\n   * @return {object} Key/value map.\n   * @example\n   *\n   * _.parseQueryString('key=value');\n   * // => { key: 'value' }\n   */\n\n\n  function parseQueryString(string) {\n    return _.transform(_.toString(string).split('&'), function (result, segment) {\n      var split = segment.split('=');\n      result[decodeURIComponent(split[0])] = decodeURIComponent(split[1]);\n    }, {});\n  }\n  /**\n   * Returns a number representing the sign of `value`.\n   *\n   * If `value` is a positive number, negative number, positive zero or negative zero,\n   * the function will return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Math\n   * @param {number} value A number\n   * @returns {number} A number representing the sign\n   * @example\n   *\n   * _.sign(10);\n   * // => 1\n   *\n   * _.sign(-10);\n   * // => -1\n   */\n\n\n  function sign(value) {\n    var sign = NaN;\n\n    if (_.isNumber(value)) {\n      if (value === 0) {\n        sign = value;\n      } else if (value >= 1) {\n        sign = 1;\n      } else if (value <= -1) {\n        sign = -1;\n      }\n    }\n\n    return sign;\n  }\n  /**\n   * Generates a url-safe \"slug\" form of a string.\n   *\n   * @static\n   * @memberOf _\n   * @category String\n   * @param {string} string String value.\n   * @return {string} URL-safe form of a string.\n   * @example\n   *\n   * _.slugify('A Test');\n   * // => a-test\n   */\n\n\n  function slugify(string) {\n    return _.deburr(string).trim().toLowerCase().replace(/ /g, '-').replace(/([^a-zA-Z0-9\\._-]+)/, '');\n  }\n  /**\n   * Parses a value by passing it to new Date().\n   *\n   * @static\n   * @memberOf _\n   * @category Date\n   * @param {string} val Value to be parsed\n   * @return {Date} Resulting date\n   */\n\n\n  function parseDate(val) {\n    return new Date(val);\n  }\n  /**\n   * Converts an object's key/values to a query string.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {object} object Source key/value collection\n   * @return {string} Query string\n   * @example\n   *\n   * _.toQueryString({ a: 1, b: 2 });\n   * // => a=1&b=2\n   */\n\n\n  function toQueryString(object) {\n    return _.transform(object, function (results, value, key) {\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }, []).join('&');\n  }\n  /**\n   * Transforms a value in each element of collection if the path is not undefined.\n   *\n   * @static\n   * @memberOf _\n   * @category Array\n   * @param {Array} collection Array of objects\n   * @param {string} path The path of the value to transform\n   * @param {function} transformer Callback which returns the transformed value\n   * @return {Array} Returns the array of results.\n   */\n\n\n  function transformValueMap(collection, path, transformer) {\n    _.each(collection, function (element) {\n      var val = _.get(element, path);\n\n      if (!_.isUndefined(val)) {\n        _.set(element, path, transformer(val));\n      }\n    });\n\n    return collection;\n  }\n\n  _.mixin({\n    check: check,\n    differenceKeys: differenceKeys,\n    filterKeys: filterKeys,\n    generateKey: generateKey,\n    getArray: getArray,\n    getBoolean: getBoolean,\n    getFinite: getFinite,\n    getFunction: getFunction,\n    getMap: getMap,\n    getNumber: getNumber,\n    getObject: getObject,\n    getPlainObject: getPlainObject,\n    getPrototype: getPrototype,\n    getSet: getSet,\n    getString: getString,\n    getWeakMap: getWeakMap,\n    getWeakSet: getWeakSet,\n    hasInOfType: hasInOfType,\n    hasOfType: hasOfType,\n    isIterable: isIterable,\n    isNonEmptyString: isNonEmptyString,\n    objectWith: objectWith,\n    parseQueryString: parseQueryString,\n    sign: sign,\n    slugify: slugify,\n    toBool: toBool,\n    toDate: parseDate,\n    toQueryString: toQueryString,\n    transformValueMap: transformValueMap,\n    // Aliases\n    fromQueryString: parseQueryString,\n    parseDate: parseDate,\n    with: objectWith\n  });\n\n  return _;\n});"],"sourceRoot":""}